{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ekamjit singh\\\\Desktop\\\\oibsip_level3task-main\\\\pizza app\\\\client\\\\src\\\\screens\\\\RegisterScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { Form, Container, Button } from 'react-bootstrap';\nimport { useState } from 'react';\nimport { loginUser, registerUser } from '../actions/userAction';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RegisterScreen = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmpassword, setConfirmPassword] = useState('');\n  const [exists, setExists] = useState(true);\n  const [checked, setChecked] = useState(false);\n  const [OTP, setOTP] = useState('');\n  const [verified, setVerified] = useState(false);\n  const [matched, setMatched] = useState(false);\n  const dispatch = useDispatch();\n  const registerState = useSelector(state => state.registerReducer);\n  const {\n    success\n  } = registerState;\n\n  const registerHandler = async () => {\n    if (password !== confirmpassword) {\n      alert(\"paswords do not match!\");\n    } else {\n      /*const user = {name,email,password}\n      dispatch(registerUser(user))\n      success?window.location.href = \"/login\":console.log()\n      */\n      //CHECK IF USER ALREADY EXISTS\n      const reqobj = {\n        email: email\n      };\n      var response = await axios.post(\"/api/users/finduser\", reqobj);\n      setExists(response.data.exists);\n      setChecked(true);\n\n      if (!response.data.exists) {\n        var x = Math.floor(Math.random() * 1000000);\n        x = x.toString();\n        var mailobj = {\n          to: email,\n          subject: \"PizzaHut: OTP for account verification\",\n          text: \"Your OTP for account verification is : \" + x\n        };\n        response = await axios.post(\"/api/mail/sendmail\", mailobj);\n        const OTPobj = {\n          email: email,\n          OTP: x\n        };\n        response = await axios.post(\"/api/users/saveOTP\", OTPobj);\n      }\n    }\n  };\n\n  const OTPMatcher = async () => {\n    const OTPobj = {\n      email: email,\n      OTP: OTP\n    };\n    var response = await axios.post(\"/api/users/validateOTP\", OTPobj);\n    var {\n      matched\n    } = response.data;\n\n    if (matched) {\n      const user = {\n        name,\n        email,\n        password\n      };\n      dispatch(registerUser(user));\n      var mailobj = {\n        to: email,\n        subject: \"PizzaHut: Congratulations on creating a new account!\",\n        text: \"Your Account password is : \" + password + \". Keep it safe and enjoy shopping!\"\n      };\n      response = await axios.post(\"/api/mail/sendmail\", mailobj);\n      setMatched(true);\n      user = {\n        email,\n        password\n      };\n      dispatch(loginUser(user));\n      alert('Successfully logged in');\n      {\n        window.location.href = \"/\";\n      }\n    }\n\n    setVerified(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: exists ? /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 9\n          }, this), email !== '' && checked && exists ? /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"Email already exists\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 9\n          }, this) : /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"We'll never share your email with anyone else.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicConfirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            value: confirmpassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: registerHandler,\n          children: \"Send OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this) :\n      /*#__PURE__*/\n      //does not exist\n      _jsxDEV(Container, {\n        children: !matched ? /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"center\", {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                \"color\": \"lightgreen\"\n              },\n              children: \"OTP sent to email successfully\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 65\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter OTP\",\n              value: OTP,\n              onChange: e => setOTP(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 9\n          }, this), OTP !== '' && verified && !matched ? /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"OTP does not match\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 48\n          }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: OTPMatcher,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(RegisterScreen, \"Y7uKLoJUwPPnBwWrbg4DK7BnAzU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["C:/Users/ekamjit singh/Desktop/oibsip_level3task-main/pizza app/client/src/screens/RegisterScreen.jsx"],"names":["React","axios","Form","Container","Button","useState","loginUser","registerUser","useSelector","useDispatch","RegisterScreen","name","setName","email","setEmail","password","setPassword","confirmpassword","setConfirmPassword","exists","setExists","checked","setChecked","OTP","setOTP","verified","setVerified","matched","setMatched","dispatch","registerState","state","registerReducer","success","registerHandler","alert","reqobj","response","post","data","x","Math","floor","random","toString","mailobj","to","subject","text","OTPobj","OTPMatcher","user","window","location","href","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport {Form, Container, Button} from 'react-bootstrap'\nimport {useState} from 'react'\nimport {loginUser, registerUser} from '../actions/userAction'\nimport {useSelector, useDispatch } from 'react-redux'\n\nconst RegisterScreen = () => {\n    const [name,setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmpassword, setConfirmPassword] = useState('')\n    \n    const [exists,setExists] = useState(true);\n    const [checked,setChecked] = useState(false);\n    const [OTP, setOTP] = useState('');\n    const [verified, setVerified] = useState(false);\n    const [matched, setMatched] = useState(false);\n\n\n    const dispatch = useDispatch()\n    const registerState = useSelector((state) => state.registerReducer);\n    const { success } = registerState;\n    \n    const registerHandler = async() =>{\n    \n        if(password!==confirmpassword)\n        {\n            alert(\"paswords do not match!\")\n        }\n        else{\n        /*const user = {name,email,password}\n        dispatch(registerUser(user))\n        success?window.location.href = \"/login\":console.log()\n        */\n\n        //CHECK IF USER ALREADY EXISTS\n\n        const reqobj = {\n          email:email\n        }\n        var response = await axios.post(\"/api/users/finduser\",reqobj);\n        setExists(response.data.exists);\n        setChecked(true);\n\n        if(!response.data.exists)\n        {\n          var x = Math.floor(Math.random()*1000000);\n          x=x.toString();\n          var mailobj = {\n              to:email,\n              subject:\"PizzaHut: OTP for account verification\",\n              text:\"Your OTP for account verification is : \"+x\n          }\n          response = await axios.post(\"/api/mail/sendmail\",mailobj);\n\n\n          const OTPobj={email:email,OTP:x};\n              \n          response = await axios.post(\"/api/users/saveOTP\",OTPobj);\n        }\n\n        }\n   }\n\n\n\n   const OTPMatcher = async() =>{\n    const OTPobj={email:email,OTP:OTP};\n        \n    var response = await axios.post(\"/api/users/validateOTP\",OTPobj);\n    var {matched}=response.data;\n    if(matched)\n    {\n        const user = {name,email,password}\n        dispatch(registerUser(user))\n        var mailobj = {\n            to:email,\n            subject:\"PizzaHut: Congratulations on creating a new account!\",\n            text:\"Your Account password is : \"+password+\". Keep it safe and enjoy shopping!\"\n        }\n        response = await axios.post(\"/api/mail/sendmail\",mailobj);\n        setMatched(true);\n        user = {email,password}\n        dispatch(loginUser(user))\n        alert('Successfully logged in')        \n        {window.location.href=\"/\"}\n    }\n    setVerified(true);\n}\n    \n\n return (\n    <>\n    \n    \n    <Container>\n    \n    {exists?\n    \n      <Form>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n        <Form.Label>Name</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Enter Name\" value={name} onChange={(e)=>setName(e.target.value)}/>\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">  \n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={(e)=>setEmail(e.target.value)}/>\n        \n          \n        {email!=='' && checked && exists ?\n        <Form.Text className=\"text-muted\">Email already exists</Form.Text>\n        :\n        <Form.Text className=\"text-muted\">We'll never share your email with anyone else.\n        </Form.Text>}\n\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={(e)=>setPassword(e.target.value)}/>\n      </Form.Group> \n      <Form.Group className=\"mb-3\" controlId=\"formBasicConfirmPassword\">\n        <Form.Label>Confirm Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Confirm Password\" value={confirmpassword} onChange={(e)=>setConfirmPassword(e.target.value)}/>\n      </Form.Group>\n      \n      <Button variant=\"primary\" onClick={registerHandler}>\n        Send OTP\n      </Button>\n    </Form>\n    \n    : //does not exist\n    <Container>{!matched?<Form>\n        <center><h5 style={{\"color\":\"lightgreen\"}}>OTP sent to email successfully</h5></center>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\"><br></br>\n            <Form.Control type=\"text\" placeholder=\"Enter OTP\" value={OTP} onChange={(e)=>setOTP(e.target.value)}/>\n        </Form.Group>\n            {OTP!=='' && verified && !matched ?<Form.Text className=\"text-muted\">\n            OTP does not match\n            </Form.Text>:<h1></h1>}\n            <Button variant=\"primary\" onClick={OTPMatcher}>\n            Register\n            </Button>\n            </Form>\n        :   <>\n\n            </>\n        }</Container>\n    \n    }\n    \n    </Container>\n    </>\n  )\n}\n\nexport default RegisterScreen"]},"metadata":{},"sourceType":"module"}