{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ekamjit singh\\\\Desktop\\\\oibsip_level3task-main\\\\pizza app\\\\client\\\\src\\\\components\\\\Pizza.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; //react is default exported, useState hook is not default so in {}\n\nimport { Card, Button, Row, Col } from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal';\nimport { addToCart } from '../actions/cartAction';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Pizza = ({\n  pobj\n}) => {\n  _s();\n\n  const [variant, setVariant] = useState('small');\n  const [quantity, setQuantity] = useState(1); //const [state, setState] = useState(initialValue);\n  //state: This is the current value of the state variable. You can access it like any other variable.\n  //setState: This is a function sed to update the state value. When you call setState(newValue), it will update the state to the new Value you provide.\n  //similarly creating for modal\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const dispatch = useDispatch();\n\n  const addToCartHandler = () => {\n    console.log(\"clicked\");\n    const increment = true;\n    dispatch(addToCart(pobj, quantity, variant, true));\n  }; //this handler function dispatches the addtocart action when the button is clicked\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '18rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: pobj.image,\n        style: {\n          width: '100%',\n          height: '150px'\n        },\n        onClick: handleShow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: pobj.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: pobj.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: [\"variants\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                onChange: e => setVariant(e.target.value),\n                children: pobj.variants.map(variant => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: variant,\n                  children: variant\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: [\"quantity\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                onChange: e => setQuantity(e.target.value),\n                children: //using curly braces because it is a js code\n                [...Array(10).keys()].map(i =>\n                /*#__PURE__*/\n                //the Array(10).keys() part returns an iterator object \n                //hence we expand it to a new array using ...\n                _jsxDEV(\"option\", {\n                  value: i + 1,\n                  children: i + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: [\"Price : Rs \", pobj.prices[0][variant] * quantity, \"/-\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: addToCartHandler,\n              children: \"Add to cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: pobj.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: pobj.image,\n          alt: \"\",\n          style: {\n            height: \"250px\",\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), \"DESCRIPTION:\", pobj.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Pizza, \"lsE3CSe1OEpNW4F6iRKwSOhFf5g=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Pizza;\nexport default Pizza;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pizza\");","map":{"version":3,"sources":["C:/Users/ekamjit singh/Desktop/oibsip_level3task-main/pizza app/client/src/components/Pizza.jsx"],"names":["React","useState","Card","Button","Row","Col","Modal","addToCart","useDispatch","Pizza","pobj","variant","setVariant","quantity","setQuantity","show","setShow","handleClose","handleShow","dispatch","addToCartHandler","console","log","increment","width","image","height","name","description","e","target","value","variants","map","Array","keys","i","prices"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'    //react is default exported, useState hook is not default so in {}\nimport { Card, Button, Row, Col } from 'react-bootstrap'\nimport Modal from 'react-bootstrap/Modal';\n\nimport {addToCart} from '../actions/cartAction'\nimport {useDispatch} from 'react-redux'\n\nconst Pizza = ({pobj}) => {\n  const [variant,setVariant]=useState('small')\n  const [quantity,setQuantity]=useState(1)\n\n  //const [state, setState] = useState(initialValue);\n  //state: This is the current value of the state variable. You can access it like any other variable.\n  //setState: This is a function sed to update the state value. When you call setState(newValue), it will update the state to the new Value you provide.\n  \n  //similarly creating for modal\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  const dispatch = useDispatch();\n\n  \n  const addToCartHandler =()=>{\n    console.log(\"clicked\")\n    const increment = true\n    dispatch(addToCart(pobj,quantity,variant,true))\n  }\n  //this handler function dispatches the addtocart action when the button is clicked\n\n  return (\n    <><Card style={{ width: '18rem' }}>\n      <Card.Img variant=\"top\" src={pobj.image} style={{width:'100%', height:'150px'}} onClick={handleShow}/>\n      <Card.Body>\n        <Card.Title>{pobj.name}</Card.Title>\n        <Card.Text>\n          {pobj.description}\n        </Card.Text>\n        <Card.Text>\n          <Row>\n            <Col md={6}>\n                variants\n\n                <br/>\n                <select onChange={e=>setVariant(e.target.value)}>\n                    {pobj.variants.map(variant=>(\n\n                        <option value={variant}>{variant}</option>\n\n                    ))}\n                </select>\n            </Col>\n            \n            <Col md={6}>\n                quantity\n                    \n                <br/>\n                <select onChange={e=>setQuantity(e.target.value)}>\n                    { //using curly braces because it is a js code\n                      [...Array(10).keys()].map(i=>(\n                        //the Array(10).keys() part returns an iterator object \n                        //hence we expand it to a new array using ...\n                        <option value={i+1}>{i+1}</option>\n                    ))}\n                </select>\n            </Col>\n          </Row>\n        </Card.Text>\n        <Row>\n          <Col md={6}>Price : Rs {pobj.prices[0][variant]*quantity}/-</Col>\n          <Col md={6}><Button variant=\"primary\" onClick={addToCartHandler}>Add to cart</Button></Col>\n        </Row>\n        \n      </Card.Body>\n    </Card>\n    \n    { //WE CAN ADD OTHER JS FUNCTIONS HERE IF NEEDED\n      //BEFORE THE END OF FRAGMENT </>\n    }\n\n    <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{pobj.name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <img src={pobj.image} alt=\"\" style={{height:\"250px\", width:\"100%\"} }></img>\n          DESCRIPTION: \n        {pobj.description}\n        \n        </Modal.Body>\n        <Modal.Footer>\n          \n          \n        </Modal.Footer>\n      </Modal>\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    </>\n  )\n}\n\nexport default Pizza"]},"metadata":{},"sourceType":"module"}