{"ast":null,"code":"import axios from \"axios\";\nexport const getAllStock = () => async dispatch => {\n  dispatch({\n    type: \"GET_STOCK_REQUEST\"\n  });\n\n  try {\n    console.log(\"stock request\");\n    const response = await axios.get(\"/api/inventory/getAllStock\"); //will continue after the above request is successfully served at the pizzaRouter.js\n\n    console.log(\"stock from action\");\n    console.log(response.data);\n    dispatch({\n      type: \"GET_STOCK_SUCCESS\",\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"GET_STOCK_FAIL\",\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/ekamjit singh/Desktop/oibsip_level3task-main/pizza app/client/src/actions/inventoryAction.js"],"names":["axios","getAllStock","dispatch","type","console","log","response","get","data","payload","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,WAAW,GAAG,MAAI,MAAMC,QAAN,IAAiB;AAC5CA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAC;AAAN,GAAD,CAAR;;AACA,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,4BAAV,CAAvB,CAFA,CAGA;;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACE,IAArB;AACAN,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC,mBAAN;AAA2BM,MAAAA,OAAO,EAACH,QAAQ,CAACE;AAA5C,KAAD,CAAR;AAGH,GATD,CASE,OAAOE,KAAP,EAAc;AACZR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC,gBAAN;AAAuBM,MAAAA,OAAO,EAACC;AAA/B,KAAD,CAAR;AACH;AACJ,CAdM","sourcesContent":["import axios from \"axios\"\r\nexport const getAllStock = ()=>async(dispatch)=>{\r\n    dispatch({type:\"GET_STOCK_REQUEST\"})\r\n    try {\r\n        console.log(\"stock request\")\r\n        const response = await axios.get(\"/api/inventory/getAllStock\");\r\n        //will continue after the above request is successfully served at the pizzaRouter.js\r\n        console.log(\"stock from action\")\r\n        console.log(response.data)\r\n        dispatch({type:\"GET_STOCK_SUCCESS\", payload:response.data})\r\n        \r\n    \r\n    } catch (error) {\r\n        dispatch({type:\"GET_STOCK_FAIL\",payload:error})\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}