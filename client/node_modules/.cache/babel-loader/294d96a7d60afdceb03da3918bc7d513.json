{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ekamjit singh\\\\Desktop\\\\oibsip_level3task-main\\\\pizza app\\\\client\\\\src\\\\screens\\\\CustomScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllStock } from '../actions/inventoryAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CustomScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    console.log(\"dispatching..\");\n    dispatch(getAllStock()); //dispatch action\n  }, [dispatch]);\n  var stock = useSelector(state => state.getAllStockReducer); //getting pizza state using useSelector\n\n  console.log(\"Recieved Stock...\");\n  console.log(stock);\n  console.log(stock[\"stock\"]);\n  const [variant, setVariant] = useState('small');\n  const [quantity, setQuantity] = useState(1);\n  const [base, setBase] = useState('classic');\n  const [sauce, setSauce] = useState('classic');\n  const [cheese, setCheese] = useState('mozzerella');\n  const [veggies, setVeggies] = useState('corn');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create your Custom Pizza\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            style: {\n              \"padding\": \"2%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/custom_side_img.jpg\",\n              style: {\n                \"width\": \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 8,\n            style: {\n              \"padding\": \"4%\",\n              \"border\": \"2px solid red\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Choose the ingredients of your choice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this), \"Select base \\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: e => setBase(e.target.value),\n              children: stock[\"stock\"][0].variants.map(variant => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: variant,\n                children: variant\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this), \"\\xA0\\xA0\\xA0\\xA0 Select sauce \\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: e => setSauce(e.target.value),\n              children: stock[\"stock\"][1].variants.map(variant => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: variant,\n                children: variant\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), \"Select cheese\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: e => setCheese(e.target.value),\n              children: stock[\"stock\"][2].variants.map(variant => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: variant,\n                children: variant\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this), \"\\xA0\\xA0\\xA0\\xA0 Select veggies \\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: e => setVeggies(e.target.value),\n              children: stock[\"stock\"][3].variants.map(variant => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: variant,\n                children: variant\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Chosen Ingredients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this), \"Base : \", base, \" \\xA0 Sauce : \", sauce, \"\\xA0 Cheese : \", cheese, \"\\xA0 Topping : \", veggies, \"\\xA0\", /*#__PURE__*/_jsxDEV(\"br\", {\n              children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CustomScreen, \"KNXlgL2i+lPTg8ShljCAolPJLxw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CustomScreen;\nexport default CustomScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomScreen\");","map":{"version":3,"sources":["C:/Users/ekamjit singh/Desktop/oibsip_level3task-main/pizza app/client/src/screens/CustomScreen.jsx"],"names":["React","useEffect","useState","Container","Row","Col","Button","useSelector","useDispatch","getAllStock","CustomScreen","dispatch","console","log","stock","state","getAllStockReducer","variant","setVariant","quantity","setQuantity","base","setBase","sauce","setSauce","cheese","setCheese","veggies","setVeggies","e","target","value","variants","map"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react'\r\nimport {Container, Row, Col, Button} from 'react-bootstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getAllStock } from '../actions/inventoryAction'\r\n\r\nconst CustomScreen = () => {\r\n    \r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(()=>{\r\n        console.log(\"dispatching..\")\r\n        dispatch(getAllStock())//dispatch action\r\n    }, [dispatch])\r\n\r\n    var stock = useSelector((state)=>state.getAllStockReducer)//getting pizza state using useSelector\r\n    \r\n    console.log(\"Recieved Stock...\")\r\n    console.log(stock)\r\n    console.log(stock[\"stock\"])\r\n\r\n    const [variant,setVariant]=useState('small')\r\n    const [quantity,setQuantity]=useState(1)\r\n    \r\n\r\n    const [base,setBase]=useState('classic')\r\n    const [sauce,setSauce]=useState('classic')\r\n    const [cheese,setCheese]=useState('mozzerella')\r\n    const [veggies,setVeggies]=useState('corn')\r\n    \r\n    \r\n  \r\n    return (\r\n    <>\r\n    <br></br>\r\n        <Container>\r\n\r\n            <h1>Create your Custom Pizza</h1>\r\n\r\n            <Container>\r\n\r\n                <Row >\r\n\r\n                    <Col md={4} style={{\"padding\":\"2%\"}}>\r\n                    \r\n                    <img src = \"/images/custom_side_img.jpg\" style={{\"width\":\"100%\"}}></img>\r\n                    \r\n                    \r\n                    </Col>\r\n                    \r\n                    <Col md={8} style={{\"padding\":\"4%\", \"border\": \"2px solid red\"}}>\r\n                        \r\n\r\n                        <h2>Choose the ingredients of your choice</h2>\r\n                        <br></br>\r\n                        Select base &nbsp;&nbsp;\r\n                        <select onChange={e=>setBase(e.target.value)}>\r\n                        {stock[\"stock\"][0].variants.map(variant=>(\r\n\r\n                        <option value={variant}>{variant}</option>\r\n\r\n                            ))}                \r\n                        </select>\r\n\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                        Select sauce &nbsp;&nbsp;\r\n                        <select onChange={e=>setSauce(e.target.value)}>\r\n                        {stock[\"stock\"][1].variants.map(variant=>(\r\n\r\n                        <option value={variant}>{variant}</option>\r\n\r\n                            ))}                \r\n                        </select>\r\n\r\n                        <br></br>\r\n                            <br></br>\r\n\r\n                        Select cheese&nbsp;&nbsp;\r\n                        <select onChange={e=>setCheese(e.target.value)}>\r\n                        {stock[\"stock\"][2].variants.map(variant=>(\r\n\r\n                        <option value={variant}>{variant}</option>\r\n\r\n                            ))}                \r\n                        </select>\r\n\r\n                            \r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                        Select veggies &nbsp;&nbsp;\r\n                        <select onChange={e=>setVeggies(e.target.value)}>\r\n                        {stock[\"stock\"][3].variants.map(variant=>(\r\n\r\n                        <option value={variant}>{variant}</option>\r\n\r\n                            ))}                \r\n                        </select>\r\n\r\n\r\n                        <br></br>\r\n                            <br></br>\r\n\r\n                        <hr></hr>\r\n                        <br></br>\r\n\r\n                        <h3>Chosen Ingredients</h3>\r\n                        Base : {base} &nbsp; Sauce : {sauce}&nbsp; Cheese : {cheese}&nbsp; Topping : {veggies}&nbsp;                        \r\n                    <br><br></br></br>\r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n\r\n\r\n\r\n\r\n        </Container>\r\n\r\n\r\n\r\n    </>\r\n    \r\n    \r\n    )\r\n}\r\n\r\nexport default CustomScreen"]},"metadata":{},"sourceType":"module"}