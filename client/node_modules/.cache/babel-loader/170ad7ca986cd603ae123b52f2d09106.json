{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ekamjit singh\\\\Desktop\\\\oibsip_level3task-main\\\\pizza app\\\\client\\\\src\\\\screens\\\\CustomScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllStock } from '../actions/inventoryAction';\nimport { addToCart } from '../actions/cartAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CustomScreen = () => {\n  _s();\n\n  var loadings = true;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    console.log(\"dispatching..\");\n    dispatch(getAllStock()); //dispatch action\n  }, [dispatch]);\n  const stockstate = useSelector(state => state.getAllStockReducer); //getting pizza state using useSelector\n\n  const {\n    stock,\n    loading,\n    error\n  } = stockstate;\n  loadings = loading;\n  console.log(\"Recieved Stock...\");\n  console.log(stock);\n  console.log(stock[0]);\n\n  const addToCartHandler = () => {\n    console.log(\"clicked\");\n    /*\r\n            var cartItem = {\r\n                name:pizza.name,\r\n                _id:pizza._id,\r\n                image:pizza.image,\r\n                variant:variant,\r\n                quantity:Number(quantity),\r\n                prices:pizza.prices,\r\n                price: pizza.prices[0][variant]*quantity,  \r\n              };\r\n          */\n\n    var tprice = stock[\"stock\"][0].prices[0][base] + stock[\"stock\"][1].prices[0][sauce] + stock[\"stock\"][2].prices[0][cheese] + stock[\"stock\"][3].prices[0][veggies];\n    var pobj = {\n      name: \"Custom Fresh pizza\",\n      _id: \"cust123\",\n      image: \"/images/custom.jpg\",\n      prices: [{\n        \"medium\": tprice\n      }]\n    };\n    var variant = \"medium\";\n    dispatch(addToCart(pobj, 1, variant));\n  };\n\n  const [variant, setVariant] = useState('small');\n  const [quantity, setQuantity] = useState(1);\n  const [base, setBase] = useState('classic');\n  const [sauce, setSauce] = useState('classic');\n  const [cheese, setCheese] = useState('mozzerella');\n  const [veggies, setVeggies] = useState('corn');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [loadings ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 20\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Error while loading data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create your Custom Pizza\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            style: {\n              \"padding\": \"2%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/custom_side_img.jpg\",\n              style: {\n                \"width\": \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 8,\n            style: {\n              \"padding\": \"4%\",\n              \"border\": \"2px solid red\"\n            },\n            children: [\"Select base \\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: e => setBase(e.target.value),\n              children: stock[0] && stock[0].variants.map(variant => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: variant,\n                children: variant\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this), \"\\xA0\\xA0\\xA0\\xA0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CustomScreen, \"cVLR72lIH27rx0xn/lC2ejNALZA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CustomScreen;\nexport default CustomScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomScreen\");","map":{"version":3,"sources":["C:/Users/ekamjit singh/Desktop/oibsip_level3task-main/pizza app/client/src/screens/CustomScreen.jsx"],"names":["React","useEffect","useState","Container","Row","Col","Button","useSelector","useDispatch","getAllStock","addToCart","CustomScreen","loadings","dispatch","console","log","stockstate","state","getAllStockReducer","stock","loading","error","addToCartHandler","tprice","prices","base","sauce","cheese","veggies","pobj","name","_id","image","variant","setVariant","quantity","setQuantity","setBase","setSauce","setCheese","setVeggies","e","target","value","variants","map"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react'\r\nimport {Container, Row, Col, Button} from 'react-bootstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getAllStock } from '../actions/inventoryAction'\r\nimport { addToCart } from '../actions/cartAction'\r\n\r\nconst CustomScreen = () => {\r\n    \r\n    var loadings = true;\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(()=>{\r\n        console.log(\"dispatching..\")\r\n        dispatch(getAllStock())//dispatch action\r\n    }, [dispatch])\r\n    \r\n    \r\n    const stockstate = useSelector((state)=>state.getAllStockReducer)//getting pizza state using useSelector\r\n    const {stock, loading, error} = stockstate;\r\n    loadings=loading;\r\n    console.log(\"Recieved Stock...\")\r\n    console.log(stock)\r\n    console.log(stock[0])\r\n\r\n    const addToCartHandler =()=>{\r\n        console.log(\"clicked\")\r\n/*\r\n        var cartItem = {\r\n            name:pizza.name,\r\n            _id:pizza._id,\r\n            image:pizza.image,\r\n            variant:variant,\r\n            quantity:Number(quantity),\r\n            prices:pizza.prices,\r\n            price: pizza.prices[0][variant]*quantity,  \r\n          };\r\n      */\r\n        var tprice = stock[\"stock\"][0].prices[0][base]+stock[\"stock\"][1].prices[0][sauce]+stock[\"stock\"][2].prices[0][cheese]+stock[\"stock\"][3].prices[0][veggies];\r\n        var pobj = {\r\n            name:\"Custom Fresh pizza\",\r\n            _id:\"cust123\",\r\n            image:\"/images/custom.jpg\",\r\n            prices:[{\"medium\":tprice}]\r\n        }\r\n        var variant=\"medium\";\r\n        dispatch(addToCart(pobj,1,variant))\r\n      }\r\n\r\n    const [variant,setVariant]=useState('small')\r\n    const [quantity,setQuantity]=useState(1)\r\n    \r\n\r\n    const [base,setBase]=useState('classic')\r\n    const [sauce,setSauce]=useState('classic')\r\n    const [cheese,setCheese]=useState('mozzerella')\r\n    const [veggies,setVeggies]=useState('corn')\r\n    \r\n    \r\n  \r\n    return (\r\n    <>\r\n    \r\n    <br></br>\r\n        <Container>\r\n        {loadings? <h1>loading....</h1>\r\n                        :error? <h1>Error while loading data</h1>\r\n                            :\r\n            \r\n            \r\n            <Container>\r\n            <h1>Create your Custom Pizza</h1>\r\n                <Row >\r\n\r\n                    <Col md={4} style={{\"padding\":\"2%\"}}>\r\n                    \r\n                    <img src = \"/images/custom_side_img.jpg\" style={{\"width\":\"100%\"}}></img>\r\n                    \r\n                    \r\n                    </Col>\r\n                    \r\n\r\n\r\n\r\n                    <Col md={8} style={{\"padding\":\"4%\", \"border\": \"2px solid red\"}}>\r\n                     \r\n                    Select base &nbsp;&nbsp;\r\n                        <select onChange={e=>setBase(e.target.value)}>\r\n                        {stock[0] && stock[0].variants.map(variant=>(\r\n\r\n                        <option value={variant}>{variant}</option>\r\n\r\n                            ))}                \r\n                        </select>\r\n\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                                \r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n        \r\n            </Container>\r\n        }\r\n                    <br></br>        \r\n\r\n\r\n        </Container>\r\n\r\n\r\n\r\n    </>\r\n    \r\n    \r\n    )\r\n}\r\n\r\nexport default CustomScreen"]},"metadata":{},"sourceType":"module"}