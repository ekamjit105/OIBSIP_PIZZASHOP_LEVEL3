{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ekamjit singh\\\\Desktop\\\\oibsip_level3task-main\\\\pizza app\\\\client\\\\src\\\\screens\\\\LoginScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Container, Button } from 'react-bootstrap';\nimport { loginUser } from '../actions/userAction';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginScreen = () => {\n  _s();\n\n  const {\n    success,\n    error\n  } = useSelector(state => state.loginReducer);\n  const dispatch = useDispatch(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const loginHandler = () => {\n    const user = {\n      email,\n      password\n    };\n    dispatch(loginUser(user));\n    success ? alert('user successfully logged in') : error ? alert(\"error in logging in\", error) : console.log();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        width: \"30%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"We'll never share your email with anyone else.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/reset-password\",\n          children: \"Forgot password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: loginHandler,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LoginScreen, \"jcpiCHiNetjtbIFRgWpP7kn9V48=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["C:/Users/ekamjit singh/Desktop/oibsip_level3task-main/pizza app/client/src/screens/LoginScreen.jsx"],"names":["React","useState","Form","Container","Button","loginUser","useSelector","useDispatch","LoginScreen","success","error","state","loginReducer","dispatch","email","setEmail","password","setPassword","loginHandler","user","alert","console","log","width","e","target","value"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport {Form, Container, Button} from 'react-bootstrap'\nimport { loginUser } from '../actions/userAction'\nimport { useSelector,useDispatch } from 'react-redux'\n\n\nconst LoginScreen = () => {\n\n  const {success,error}=useSelector((state)=>state.loginReducer)\n\n  const dispatch = useDispatch(\"\")\n  const [email, setEmail]=useState(\"\")\n  const [password, setPassword]=useState(\"\")\n\n  const loginHandler=()=>{\n    const user = {email,password}\n    dispatch(loginUser(user))\n    success?alert('user successfully logged in'):error?alert(\"error in logging in\",error):console.log()\n  }\n\n  return (\n    <><br></br><br></br>\n    <Container style={{width:\"30%\"}}>\n    <Form>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={(e)=>setEmail(e.target.value)}/>\n        <Form.Text className=\"text-muted\">\n          We'll never share your email with anyone else.\n        </Form.Text>\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={(e)=>setPassword(e.target.value)}/>\n      </Form.Group>\n     \n      <a href=\"/reset-password\">Forgot password</a>\n      <br></br>\n      <Button variant=\"primary\" onClick={loginHandler}>\n        Submit\n      </Button>\n    </Form>\n    </Container>\n    </>\n  );\n}\n\n\nexport default LoginScreen"]},"metadata":{},"sourceType":"module"}