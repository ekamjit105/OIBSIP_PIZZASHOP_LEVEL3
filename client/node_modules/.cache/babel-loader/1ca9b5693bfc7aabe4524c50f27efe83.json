{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ekamjit singh\\\\Desktop\\\\oibsip_level3task-main\\\\pizza app\\\\client\\\\src\\\\screens\\\\OrdersScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getMyOrders } from '../actions/orderAction';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OrdersScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const orderState = useSelector(state => state.myOrdersReducer);\n  const {\n    orders\n  } = orderState;\n  useEffect(() => {\n    dispatch(getMyOrders());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center \",\n      children: \"Your Orders \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 8\n    }, this), orders && orders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container border p-4 bg-light\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Items :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this), order.orderItems.map(item => /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [item.name, \" (\", item.variant, \") x \", item.quantity, \" =\", \" \", item.name === \"Custom Fresh pizza\" ? /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: [\"Description: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 69\n                }, this), item.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 52\n              }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 102\n              }, this), \"Rs \", item.price, \"/-\"]\n            }, item.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 5,\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Order Info :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [\"Order id : \", order._id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [\"Order Amount : Rs \", order.orderAmount, \"/-\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [\"Transaction id : \", order.transactionId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"Status : \", order.isDelivered ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: \"Delivered\"\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: \"Not delivered\"\n              }, void 0, false)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n};\n\n_s(OrdersScreen, \"11blw39SOXtyw2oRJaS7WxN731U=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = OrdersScreen;\nexport default OrdersScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersScreen\");","map":{"version":3,"sources":["C:/Users/ekamjit singh/Desktop/oibsip_level3task-main/pizza app/client/src/screens/OrdersScreen.jsx"],"names":["React","useEffect","useSelector","useDispatch","getMyOrders","Container","Row","Col","OrdersScreen","dispatch","orderState","state","myOrdersReducer","orders","map","order","orderItems","item","name","variant","quantity","description","price","_id","orderAmount","transactionId","isDelivered"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAAQC,SAAR,EAAmBC,GAAnB,EAAwBC,GAAxB,QAAkC,iBAAlC;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAEvB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAMO,UAAU,GAAGR,WAAW,CAAES,KAAD,IAASA,KAAK,CAACC,eAAhB,CAA9B;AACA,QAAM;AAACC,IAAAA;AAAD,MAAUH,UAAhB;AACAT,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ,CAACL,WAAW,EAAZ,CAAR;AACD,GAFM,EAEJ,CAACK,QAAD,CAFI,CAAT;AAKJ,sBACI;AAAA,iCAAG;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,EAECI,MAAM,IACLA,MAAM,CAACC,GAAP,CAAYC,KAAD,iBACT;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA,6BACD,QAAC,SAAD;AAAA,+BACG,QAAC,GAAD;AAAA,kCACE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGA,KAAK,CAACC,UAAN,CAAiBF,GAAjB,CAAsBG,IAAD,iBACpB;AAAA,yBACEA,IAAI,CAACC,IADP,QACeD,IAAI,CAACE,OADpB,UACiCF,IAAI,CAACG,QADtC,QACkD,GADlD,EAEEH,IAAI,CAACC,IAAL,KAAY,oBAAZ,gBAAiC;AAAA,yDAAiB;AAAA;AAAA;AAAA;AAAA,wBAAjB,EAA2BD,IAAI,CAACI,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAjC,gBAAmF;AAAA;AAAA;AAAA;AAAA,sBAFrF,SAKMJ,IAAI,CAACK,KALX;AAAA,eAASL,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA,oBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,kBAbF,eAeE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wCAAgBH,KAAK,CAACQ,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,+CAAuBR,KAAK,CAACS,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA,8CAAsBT,KAAK,CAACU,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA,sCAAcV,KAAK,CAACW,WAAN,gBAAkB;AAAA;AAAA,+BAAlB,gBAAiC;AAAA;AAAA,+BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA,YADF,CAHF;AAAA,kBADJ;AAmCC,CA9CD;;GAAMlB,Y;UAEeL,W,EAEED,W;;;KAJjBM,Y;AAgDN,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useSelector,useDispatch } from 'react-redux'\nimport { getMyOrders } from '../actions/orderAction'\nimport {Container, Row, Col} from 'react-bootstrap' \n\nconst OrdersScreen = () => {\n    \n    const dispatch = useDispatch();\n    \n    const orderState = useSelector((state)=>state.myOrdersReducer)\n    const {orders} =orderState \n    useEffect(() => {\n        dispatch(getMyOrders())\n      }, [dispatch]);  \n\n    \nreturn (\n    <> <h1 className=\"text-center \">Your Orders </h1>\n    \n    {orders &&\n      orders.map((order) => (\n        <div className=\"container border p-4 bg-light\">\n       <Container>\n          <Row>\n            <Col md={4}>\n              <h4>Items :</h4>\n              {order.orderItems.map((item) => (\n                <h6 key={item.name}>\n                 {item.name} ({item.variant}) x {item.quantity} ={\" \"}\n                 {item.name===\"Custom Fresh pizza\"?<h6>Description: <br></br>{item.description}</h6>:<h1></h1>}\n                            \n                 \n                  Rs {item.price}/-\n                </h6>\n              ))}\n            </Col>\n            <Col md={3}>\n            </Col>\n            <Col md={5}>\n              <h4>Order Info :</h4>\n              <h6>Order id : {order._id}</h6>\n              <h6>Order Amount : Rs {order.orderAmount}/-</h6>\n              <h6>Transaction id : {order.transactionId}</h6>\n              <h5>Status : {order.isDelivered?<>Delivered</>:<>Not delivered</>}</h5>\n            </Col>\n          </Row>\n          </Container>\n        </div>\n      ))}\n  </>\n  )\n}\n\nexport default OrdersScreen"]},"metadata":{},"sourceType":"module"}