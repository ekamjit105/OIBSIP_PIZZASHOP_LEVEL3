{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ekamjit singh\\\\Desktop\\\\oibsip_level3task-main\\\\pizza app\\\\client\\\\src\\\\screens\\\\ResetScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ResetScreen = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [exists, setExists] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const [OTP, setOTP] = useState('');\n  const [sent, setSent] = useState(false);\n  const [matched, setMatched] = useState(false);\n\n  const OTPHandler = async () => {\n    //sending API Request directly from here rather than making an action and reducer\n    const reqobj = {\n      email: email\n    };\n    console.log(\"Sending.. \", reqobj);\n    const response = await axios.post(\"/api/users/finduser\", reqobj);\n    console.log(\"response recieved:\", response.data.exists);\n    setExists(response.data.exists);\n    setChecked(true);\n    response = await axios.post(\"/api/users/sendOTP\", reqobj);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        \"width\": \"30%\",\n        \"margin-top\": \"5%\",\n        \"border\": \"1px solid lightgrey\",\n        \"padding\": \"2%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Reset your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 14\n      }, this), !exists ? /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this), email !== '' && checked && !exists ? /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"Email does not exist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 44\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: OTPHandler,\n          children: \"SendOTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            style: {\n              \"color\": \"lightgreen\"\n            },\n            children: \"OTP sent to email successfully &check;\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter OTP\",\n            value: email,\n            onChange: e => setOTP(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this), OTP !== '' && checked && !exists ? /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"OTP does not match\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 42\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: OTPHandler,\n          children: \"SendOTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(ResetScreen, \"DYVyrh+QE+saF7oBV/Z1qBu5L48=\");\n\n_c = ResetScreen;\nexport default ResetScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetScreen\");","map":{"version":3,"sources":["C:/Users/ekamjit singh/Desktop/oibsip_level3task-main/pizza app/client/src/screens/ResetScreen.jsx"],"names":["React","useState","Container","Form","Button","axios","ResetScreen","email","setEmail","exists","setExists","checked","setChecked","OTP","setOTP","sent","setSent","matched","setMatched","OTPHandler","reqobj","console","log","response","post","data","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { Container, Form, Button } from 'react-bootstrap'\r\nimport axios from 'axios';\r\n\r\nconst ResetScreen = () => {\r\n\r\n    const [ email, setEmail] = useState('')\r\n    const [exists,setExists] = useState(false);\r\n    const [checked,setChecked] = useState(false);\r\n    const [OTP, setOTP] = useState('');\r\n    const [sent, setSent] = useState(false);\r\n    const [matched, setMatched] = useState(false);\r\n\r\n\r\n    const OTPHandler = async() =>{\r\n\r\n        //sending API Request directly from here rather than making an action and reducer\r\n        const reqobj = {\r\n            email:email\r\n        }\r\n        console.log(\"Sending.. \",reqobj)\r\n        const response = await axios.post(\"/api/users/finduser\",reqobj);\r\n        console.log(\"response recieved:\", response.data.exists)\r\n        setExists(response.data.exists);\r\n        setChecked(true);\r\n        response = await axios.post(\"/api/users/sendOTP\",reqobj);\r\n        \r\n    }\r\n\r\n  return (\r\n  \r\n  <>\r\n    \r\n    \r\n    <Container style={{\"width\":\"30%\", \"margin-top\":\"5%\",\"border\":\"1px solid lightgrey\",\"padding\":\"2%\"}}>\r\n    <h3>Reset your Password</h3>\r\n    <br></br><br></br>\r\n    \r\n    {!exists?\r\n    \r\n    <Form>\r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label>Email address</Form.Label>\r\n        <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={(e)=>setEmail(e.target.value)}/>\r\n      </Form.Group>\r\n        {email!=='' && checked && !exists ?<Form.Text className=\"text-muted\">\r\n          Email does not exist\r\n        </Form.Text>:<h1></h1>}\r\n      <Button variant=\"primary\" onClick={OTPHandler}>\r\n        SendOTP\r\n      </Button>\r\n    </Form>\r\n    :\r\n    <Form>\r\n      <center><h5 style={{\"color\":\"lightgreen\"}}>OTP sent to email successfully &check;</h5></center>\r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label>OTP</Form.Label>\r\n        <Form.Control type=\"text\" placeholder=\"Enter OTP\" value={email} onChange={(e)=>setOTP(e.target.value)}/>\r\n      </Form.Group>\r\n        {OTP!=='' && checked && !exists ?<Form.Text className=\"text-muted\">\r\n          OTP does not match\r\n        </Form.Text>:<h1></h1>}\r\n      <Button variant=\"primary\" onClick={OTPHandler}>\r\n        SendOTP\r\n      </Button>\r\n    </Form>\r\n    }\r\n    </Container>\r\n\r\n\r\n\r\n\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default ResetScreen"]},"metadata":{},"sourceType":"module"}